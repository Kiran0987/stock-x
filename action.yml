name: Stockx

on:
  workflow_dispatch:
  push:
    branches:
      - staging
    paths-ignore:
      - .dockerignore
      - .gitignore
      - '**/*.md'

env:
  CI_VERSION: snapshot.${{github.sha}}
  PROJECT_NAME: stockx_test
  ENV_NAME: staging
  APP_NAME: stockx
  ECR_REPO_NAME: stockx-poc-repo
  MAINTAINER: "Ivan Wong"

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Lint code"
        run: echo "Linting repository"

      - name: "Run unit tests"
        run: echo "Running unit tests"

 cd:
    name: CD
    runs-on: ubuntu-latest
    needs:
      - ci

    steps:
      # Expose useful environment variables to the action
      - uses: Kiran0987/github-env-vars-action@v2

      # Clone and checkout
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      # Start building
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

- name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Build docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            VERSION=latest
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:${{ env.CI_ACTION_REF_NAME_SLUG }}.${{ env.CI_SHA_SHORT }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:latest
          labels:
            project=${{ env.PROJECT_NAME }}
            name=${{ env.APP_NAME }}
            environment=${{ env.ENV_NAME }}
            maintainer=${{ env.MAINTAINER }}
            repository=${{ github.repository }}
            gh_job=${{ github.job }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
